{"version":3,"sources":["legend.svg","Components/TitleContainer.js","Components/Navbar.jsx","Components/HomeNavContainer.js","Components/HomeStats.js","Pages/HomePage.jsx","Utils/History.js","Backend/APIWrapper.js","Backend/FeedData.js","Components/Feed.jsx","Components/GraphCard.jsx","Components/SimpleBarGraph.jsx","Components/PieChart.jsx","Pages/GraphPage.jsx","Pages/MostActiveUsers.jsx","Pages/MostActivePages.jsx","Pages/LargestRecentEdits.jsx","Pages/RecentEditSize.jsx","Pages/ProportionFlagged.jsx","Pages/TestPage.jsx","Pages/UsersByMostEditsPage.jsx","Pages/AboutPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleContainer","className","this","props","title","subtitle","React","Component","NavbarLocal","state","history","activePage","window","location","href","Navbar","Collapse","Nav","Link","as","to","endsWith","target","HomeNavContainer","styled","btnTitle1","btnTitle2","btnLink","type","btnStyle","btnText","HomeStats","text","errorCode","updateStats","$","ajax","url","success","response","html","find","intervalID","setInterval","clearInterval","ListGroup","horizontal","Item","id","HomePage","icon","faBars","faChartLine","faUser","createBrowserHistory","API_ENDPOINT","getMostEditsUsers","a","async","compare","b","editcount","users","query","action","format","list","auprop","aulimit","auwitheditsonly","auactiveusers","then","data","allusers","sort","getRecentEditsWithSize","edits","rcprop","rclimit","result","recentchanges","getRecentEditsWithFlags","revids","map","recentChange","revid","getScore","scores","label","value","color","Object","values","forEach","score","undefined","damaging","prediction","getRecentLargestEdits","editList","item","Math","abs","newlen","oldlen","toString","getMostActivePages","prevTimestamp","queryRecentChanges","recentChanges","newTimestamp","activePages","countPageOccurances","getRecentActiveUsers","activeUsers","countUsers","batchQuery","itemsKey","items","endpoint","params","batches","Array","createBatch","results","batch","batchString","join","push","catch","err","Promise","all","tmpTimestamp","Date","toISOString","rcstart","rcend","revisionIds","getUserGroups","userNames","usprop","groups","queryResult","userObj","name","n","paramsString","URLSearchParams","fetch","json","setTimeout","length","resultBatch","wikidatawiki","titleCounts","change","actions","titles","entries","userCounts","user","numActions","username","array","size","splice","FeedData","maxItems","changes","newTimeStamp","usernames","unshift","pop","getTimeDifference","toCompare","round","getTime","Feed","useState","feedData","paused","setPaused","setRecentChanges","useEffect","refresh","onChange","prevPause","index","key","timestamp","GraphCard","onClick","pageLink","graph","Card","tag","Body","Title","SimpleBarGraph","tooltip","click","src","indexValue","loadData","getData","settings","bind","smlData","slice","fullGraph","setState","loaded","method","refreshMethod","refreshInterval","refreshTime","margin","classname","clickable","legend","colorBy","top","right","bottom","left","keys","indexBy","padding","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","xAxis","legendPosition","legendOffset","axisLeft","yAxis","enableLabel","animate","isInteractive","motionStiffness","motionDamping","legends","PieChart","colorFunction","innerRadius","padAngle","cornerRadius","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","defs","background","stagger","rotation","lineWidth","spacing","match","GraphPage","explanation","handlePause","MostActiveUsersGraphSettings","fullData","userAdditions","i","includes","bot","human","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","open","MostActiveUsers","event","MostActivePagesGraphSettings","pageAdditions","MostActivePages","LargestRecentEditsSettings","LargestRecentEdits","require","alt","RecentEditSizeSettings","RecentEditSize","ProportionFlaggedSettings","d","ProportionFlagged","CardDeck","UsersByMostEditsGraphSettings","UsersByMostEditsPage","AboutPage","rel","faLink","faGithub","App","console","log","process","basename","exact","path","component","TestPage","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d41e2394.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.5378cb25.svg\";","import React from 'react'\n\n\nclass TitleContainer extends React.Component {\n    render() {\n        return(\n                <div className=\" text-left\">\n                     <h1 className=\"text-left  display-3\"><b>{this.props.title}</b></h1>\n                     <h4>{this.props.subtitle}</h4  >\n                  </div>\n        )\n    }\n}\n\nexport default TitleContainer\n","import React, { Component } from 'react'\nimport { Nav, Navbar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n//Creates the Navbar shown on all pages\n\nclass NavbarLocal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { history: this.props.history }\n  }\n  render() {\n    // var isActive = this.context.router.route.location.pathname\n    let activePage = window.location.href\n    return (\n      <Navbar>\n        <Navbar.Collapse>\n          <Nav>\n            <Nav.Link\n              as={Link}\n              to=\"/\"\n              className={\n                activePage.endsWith('/') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Home\n            </Nav.Link>\n\n            <Nav.Link\n              as={Link}\n              to=\"/about-page\"\n              className={\n                activePage.endsWith('/about-page') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              About Us\n            </Nav.Link>\n            \n            <Nav.Link\n              as={Link}\n              to=\"/page\"\n              className={\n                activePage.endsWith('/page') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Page\n            </Nav.Link>\n\n            <Nav.Link\n              as={Link}\n              to=\"/feed\"\n              className={\n                activePage.endsWith('/feed') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Feed\n            </Nav.Link>\n\n            \n\n            <a\n              as={Link}\n              target=\"_blank\"\n              href=\"https://github.com/isobelm/Software-Engineering\"\n              className={\n                activePage.endsWith('/ksknc') ? 'nav-link--active' : 'nav-link'\n              }\n            >\n              Github Project\n            </a>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default NavbarLocal\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n//This class takes in a title and a description and displays them as shown on the homepage\n\n\nclass HomeNavContainer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ting\">\n\t\t\t\n\t\t\t\t<h2 className={this.props.styled}>{ this.props.btnTitle1 }</h2>\n\t\t\t\t<h2 className={this.props.styled}>{ this.props.btnTitle2 }</h2>\n\t\t\t\t<br/>\t\n\t\t\t\t<Link to={ this.props.btnLink }>\n\t\t\t\t\t <button type=\"button\" className={this.props.btnStyle}>{ this.props.btnText }</button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HomeNavContainer;\n","import React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ListGroup} from 'react-bootstrap';\nimport $ from 'jquery';\n\n//These load the statistics from a server we set up and displays them on the homepage\n\nclass HomeStats extends Component {\n\n\t state = {\n\t\t text: 'something',\n\t\t errorCode: 'Loading...',\n\t }\n\n\t componentDidMount() {\n\t  this.updateStats();\n\t  this.intervalID = setInterval(\n\t    () => this.updateStats(),\n\t    5000\n\t  );\n\t}\n\tcomponentWillUnmount() {\n\t  clearInterval(this.intervalID);\n\t}\n\n     updateStats = () => {\n\t\t$.ajax({\n  \t\t  url: \"https://protected-shelf-93081.herokuapp.com/https://www.wikidata.org/wiki/Special:Statistics\",\n  \t\t  type: 'GET',\n  \t\t  success: function(response) {\n\t\t\t  $(\"#div1\").html($($(response).find('.mw-statistics-articles')).find('.mw-statistics-numbers'));\n\t  \t\t  $(\"#div2\").html($($(response).find('.mw-statistics-edits')).find('.mw-statistics-numbers'));\n\t  \t\t  $(\"#div3\").html($($(response).find('.mw-statistics-users')).find('.mw-statistics-numbers'));\n\t  \t\t  $(\"#div4\").html($($(response).find('.mw-statistics-users-active')).find('.mw-statistics-numbers'));\n\t\t  }\n  \t   });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t<ListGroup horizontal>\n\t\t\t  <ListGroup.Item className=\"list-group-item-black\"><h1 id=\"div1\">{ this.state.errorCode }</h1><h1>Items</h1></ListGroup.Item>\n\t\t\t  <ListGroup.Item  className=\"list-group-item-red\"><h1 id=\"div2\">{ this.state.errorCode }</h1><h1>Edits</h1></ListGroup.Item>\n\t\t\t  <ListGroup.Item  className=\"list-group-item-green\"><h1 id=\"div3\">{ this.state.errorCode }</h1><h1>Users</h1></ListGroup.Item>\n\t\t\t  <ListGroup.Item  className=\"list-group-item-blue\"><h1 id=\"div4\">{ this.state.errorCode }</h1><h1>Active Users</h1></ListGroup.Item>\n\t\t\t</ListGroup>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HomeStats;\n","import React, { Component } from 'react';\nimport TitleContainer from '../Components/TitleContainer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\nimport HomeNavContainer from '../Components/HomeNavContainer';\nimport HomeStatsContainer from '../Components/HomeStats';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\n/*This is the home page and makes use of the Navbar, \nhomeNavContainer, homeStatsContainer and TitleContainer components */\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { history: this.props.history };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n        <div className=\"HomePageContent row margin-right: -15px margin-left: -15px\">\n          <div className=\"col-lg-5 col-sm-12\">\n            <TitleContainer\n              title=\"Wikidata Live\"\n              subtitle=\"A web app to visualise recent changes to Wikidata in quasi real time.\"\n            />\n          </div>\n          <div className=\"col-lg-7 col-sm-12\">\n            <div className=\"row\">\n              <div className=\"col-lg-4 col-sm-12\">\n                <h1 className=\"text-red\">\n                  <FontAwesomeIcon icon={faBars} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-red\"\n                  btnStyle=\"align-bottom btn btn-outline-red\"\n                  btnTitle1=\"About\"\n                  btnTitle2=\"Us\"\n                  btnText=\"About\"\n                  btnLink=\"/about-page\"\n                />\n              </div>\n              <div className=\"col-lg-4 col-sm-12\">\n                <h1 className=\"text-green\">\n                  <FontAwesomeIcon icon={faChartLine} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-green\"\n                  btnStyle=\"align-bottom btn btn-outline-green\"\n                  btnTitle1=\"Wikidata\"\n                  btnTitle2=\"Dashboard\"\n                  btnText=\"Dashboard\"\n                  btnLink=\"/page\"\n                />\n              </div>\n              <div className=\"col-lg-4 col-sm-12\">\n                <h1 className=\"text-blue\">\n                  <FontAwesomeIcon icon={faUser} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-blue\"\n                  btnStyle=\"align-bottom btn btn-outline-blue\"\n                  btnTitle1=\"User\"\n                  btnTitle2=\"Data\"\n                  btnText=\"Users\"\n                  btnLink=\"/most-active-users\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"statsContent row justify-content-center\">\n          <HomeStatsContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","const API_ENDPOINT = 'https://www.wikidata.org/w/api.php'\nconst SCORING_ENDPOINT = 'https://ores.wikimedia.org/v3/scores/wikidatawiki/'\nconst MAX_QUERY_SIZE = 50\nconst NUM_RETRIES = 5\n\n/**\n * @typedef {Object} User\n * @property {number} userid - The user's id\n * @property {number} name - The user's name\n * @property {number} editcount - The number of edits the user did\n * @property {number} recentactions - The number of actions a user did within\n *           30 days\n * @property {Array} groups - An array of strings which contains the groups\n *           the user belongs in. For example if the user contains \"bot\", it is\n *           a non human user\n */\n\n/**\n * Returns a list of 500 users who were recently active within 30 days which is\n * sorted by the most edits in descending order\n *\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\n *          objects\n */\nexport const getMostEditsUsers = async () => {\n  const compare = (a, b) => b.editcount - a.editcount\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'allusers',\n    auprop: 'editcount|groups',\n    aulimit: 'max',\n    auwitheditsonly: '1',\n    auactiveusers: '1',\n  }\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then((data) => data.query.allusers)\n    .then((users) => users.sort(compare))\n  return users\n}\n/**\n * Returns a list of 500 users who were recently active within 30 days which is\n * sorted by the most recent actions in descending order\n *\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\n *          objects\n */\nexport const getMostActiveUsers = async () => {\n  const compare = (a, b) => b.recentactions - a.recentactions\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'allusers',\n    auprop: 'editcount|groups',\n    aulimit: 'max',\n    auwitheditsonly: '1',\n    auactiveusers: '1',\n  }\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then((data) => data.query.allusers)\n    .then((users) => users.sort(compare))\n  return users\n}\n\nexport const getRecentEditsWithSize = async () => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'title|ids|sizes|timestamp',\n    rclimit: '500',\n  }\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\n    (result) => result.query.recentchanges\n  )\n  return await edits\n}\n\nexport const getRecentEditsWithFlags = async () => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'ids',\n    rclimit: '50',\n  }\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\n    (result) => result.query.recentchanges\n  )\n\n  let revids = await edits\n  revids = revids.map((recentChange) => recentChange.revid)\n  let scores = await getScore(revids)\n\n  let data = [\n    { id: 'damaging', label: 'damaging', value: 0, color: '#F25543' },\n    { id: 'unsure', label: 'unsure', value: 0, color: '#FFF047' },\n    { id: 'good faith', label: 'good faith', value: 0, color: '#92E16F' },\n  ]\n\n  scores = await scores\n\n  Object.values(scores).forEach((score) => {\n    if (\n      score.damaging.score !== undefined &&\n      score.damaging.score.prediction === true\n    ) {\n      data[0].value += 1\n    } else if (\n      score.damaging.score !== undefined &&\n      score.damaging.score.prediction === false\n    ) {\n      data[2].value += 1\n    } else {\n      data[1].value += 1\n    }\n  })\n\n  return data\n}\n\n/**\n * Returns recent 500 recent edits sorted by size of changes made in absolute value\n * So large additions and large deletions are included\n */\nexport const getRecentLargestEdits = async () => {\n  const editList = await getRecentEditsWithSize()\n\n  editList.forEach((item) => {\n    item.value = Math.abs(item.newlen - item.oldlen)\n    item.id = item.revid.toString()\n    item.label = item.title\n  })\n\n  editList.sort((a, b) => b.value - a.value)\n\n  return editList\n}\n\n/**\n * @typedef {Object} PageInfo\n * @property {string} id - The id of the page\n * @property {actions} actions - Number of actions which has been performed on\n *           that page\n * @property {string} title - The title of the page\n */\n\n/**\n * Returns an array of most active pages from recent changes feed\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<PageInfo[]> | string)[]}\n */\nexport const getMostActivePages = async (prevTimestamp) => {\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp)\n  const activePages = recentChanges.then((recentChanges) =>\n    countPageOccurances(recentChanges)\n  )\n  return [await activePages, newTimestamp]\n}\n\n/**\n * Returns an array of most users pages from recent changes feed\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<User[]> | string)[]}\n */\nexport const getRecentActiveUsers = async (prevTimestamp) => {\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp)\n  const activeUsers = recentChanges.then((activeUsers) =>\n    countUsers(activeUsers)\n  )\n  return [await activeUsers, newTimestamp]\n}\n\n/**\n * Batches a query to cirumvent the 50 items query limit\n *\n * @param {string} itemsKey the query key\n * @param {Array} items the items to add to the query\n * @param {string} endpoint the endpoint url\n * @param {Object} params the parameters of the query\n */\nexport const batchQuery = async (itemsKey, items, endpoint, params) => {\n  let result = []\n  let batches = null\n  if (items instanceof Array) batches = createBatch(items, MAX_QUERY_SIZE)\n  else batches = [[items]]\n  const results = batches.map(async (batch) => {\n    const batchString = batch.join('|')\n    params[itemsKey] = batchString\n    return query(endpoint, params, NUM_RETRIES)\n      .then((data) => result.push(data))\n      .catch((err) => null)\n  })\n  await Promise.all(results)\n  return result\n}\n\n/**\n * @typedef {Object} RecentChanges\n * @property {number} newlen - the number of bytes the page uses after the change\n * @property {number} ns\n * @property {number} old_revid - The old revision id\n * @property {number} oldlen - the number of bytes the page uses before the change\n * @property {number} pageid - The page id\n * @property {number} rcid - The recent change id\n * @property {number} revid - The current revision id\n * @property {string} timestamp - Timestamp of change\n * @property {string} title - Title of the page changed\n * @property {string} type - Type of action e.g. \"new\", \"edit\"\n * @property {string} user - The username of the editor\n */\n\n/**\n * Queries the API for the most recent changes\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<RecentChanges[]> | string)[]}\n */\nexport const queryRecentChanges = (prevTimestamp) => {\n  let tmpTimestamp = new Date()\n  const newTimestamp = tmpTimestamp.toISOString()\n  tmpTimestamp = tmpTimestamp - 1000\n  tmpTimestamp = new Date(tmpTimestamp).toISOString()\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'title|ids|timestamp|user|sizes',\n    rclimit: 'max',\n    rcstart: tmpTimestamp,\n    rcend: prevTimestamp,\n  }\n  const recentChanges = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then((data) => data.query.recentchanges)\n    .then((recentChanges) => {\n      const revisionIds = recentChanges.map(\n        (recentChange) => recentChange.revid\n      )\n      return getScore(revisionIds).then((scores) =>\n        recentChanges.map((recentChange) => {\n          recentChange.scores = scores[recentChange.revid]\n          return recentChange\n        })\n      )\n    })\n  return [recentChanges, newTimestamp]\n}\n\n/**\n * Returns the groups of each username in the input array\n *\n * @param {string[]} userNames - an array of usernames to fetch the group of\n * @returns {Map.<string, string[]>} - map of username to an array of groups\n *         they belong to\n */\nexport const getUserGroups = (userNames) => {\n  const key = 'ususers'\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'users',\n    usprop: 'groups',\n  }\n  const groups = batchQuery(key, userNames, API_ENDPOINT, params).then(\n    (data) => {\n      const groups = {}\n      data.forEach((queryResult) => {\n        const users = queryResult.query.users\n        users.forEach((userObj) => {\n          if (userObj.groups) groups[userObj.name] = userObj.groups\n        })\n      })\n      return groups\n    }\n  )\n  return groups\n}\n\n// ~ Helper Functions ---------------------------------------------------------\n\n/**\n * Returns a the response of a query to the Wikidata API endpoint\n *\n * @param {Object} params - Object of parameters to use when querying\n * @param {number} n - Number of times to retry if failure occurs\n * @returns {Promise.<Object>}\n */\nconst query = async (endpoint, params, n) => {\n  try {\n    const paramsString = new URLSearchParams(params).toString()\n    const url = endpoint + '?' + paramsString + '&origin=*'\n    return await fetch(url).then((response) => response.json())\n  } catch (err) {\n    if (n === 1) throw err\n    return await setTimeout(query(endpoint, params, n - 1), 500)\n  }\n}\n\n/**\n * Retruns the score of the revision id to find out if the edit was harmful or not\n *\n * @param {number[]} revisionIds - Revision ids to obtain the score of\n * @returns {Promise.<Object>}\n */\nconst getScore = async (revisionIds) => {\n  if (revisionIds.length === 0) return\n  const key = 'revids'\n  const params = {}\n  let scores = {}\n  return batchQuery(key, revisionIds, SCORING_ENDPOINT, params).then(\n    (resultBatch) => {\n      resultBatch.forEach(\n        (result) => (scores = { ...scores, ...result.wikidatawiki?.scores })\n      )\n      return scores\n    }\n  )\n}\n\n/**\n * Returns the number of times a page appeared on the recent changes feed sorted by\n * number of actions done on the page\n *\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\n */\nconst countPageOccurances = (recentChanges) => {\n  const compare = (a, b) => b.actions - a.actions\n  const titleCounts = {}\n  recentChanges.forEach((change) => {\n    const actions = titleCounts[change.title] || 0\n    titleCounts[change.title] = actions + 1\n  })\n  const titles = Object.entries(titleCounts).map(([id, actions]) => ({\n    id,\n    actions,\n  }))\n  titles.sort(compare)\n  return titles\n}\n\n/**\n * Returns the number of times a user appeared on the recent changes feed sorted by\n * number of actions done by that user\n *\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\n */\nconst countUsers = (recentChanges) => {\n  const compare = (a, b) => b.actions - a.actions\n  const userCounts = {}\n  recentChanges.forEach((change) => {\n    const user = change.user\n    const numActions = userCounts[user] || 0\n    userCounts[user] = numActions + 1\n  })\n  const users = Object.entries(userCounts).map(([username, actions]) => ({\n    username,\n    actions,\n  }))\n  const userNames = users.map(({ username }) => username)\n  getUserGroups(userNames).then((groups) => {\n    users.forEach((userObj) => (userObj.groups = groups[userObj.username]))\n    users.sort(compare)\n  })\n  return users\n}\n\n/**\n * Splits up an array into smaller arrays\n *\n * @param {Array} array - Array to create batches from\n * @param {number} size - Batch size\n * @returns {Array} batches - An array containing the batches which are of\n *         length size\n */\nconst createBatch = (array, size) => {\n  const batches = []\n  while (array.length > 0) {\n    batches.push(array.splice(0, size))\n  }\n  return batches\n}\n","import { queryRecentChanges, getUserGroups } from './APIWrapper'\n\n/** Class which wraps the Wikidata API recent changes feed */\nclass FeedData {\n  /**\n   * Create a new feed data object\n   *\n   * @param {number} maxItems - the maximum number of items to keep in the\n   *        feed.\n   */\n  constructor(maxItems) {\n    this.changes = []\n    this.maxItems = maxItems\n    this.prevTimestamp = new Date().toISOString()\n  }\n\n  refresh() {\n    const [recentChanges, newTimeStamp] = queryRecentChanges(this.prevTimestamp)\n    recentChanges.then(changes => {\n      const usernames = changes.map(change => change.user)\n      getUserGroups(usernames).then(groups =>\n        changes.forEach(change => {\n          change.groups = groups[change.user]\n          this.changes.unshift(change)\n          if (this.changes.length > this.maxItems) this.changes.pop()\n        })\n      )\n    })\n    this.prevTimestamp = newTimeStamp\n  }\n}\n\nexport default FeedData\n","import React, { useState, useEffect } from 'react'\nimport FeedData from '../Backend/FeedData'\n// eslint-disable-next-line\nimport style from '../style.css'\n\n//Creates the feed shown on the dashboard, it updates in real time and highlights suspicious changes in red\n\nfunction Feed() {\n  const [feedData] = useState(new FeedData(30))\n  const [paused, setPaused] = useState(false)\n  const [recentChanges, setRecentChanges] = useState({\n    items: [],\n  })\n\n  useEffect(() => {\n    const refresh = setInterval(() => {\n      if (!paused) feedData.refresh()\n      setRecentChanges({ items: feedData.changes })\n    }, 500)\n    return () => clearInterval(refresh)\n  }, [feedData, paused])\n\n  function togglePause() {\n    setPaused(prevPause => !prevPause)\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-blue text-left\">Most Recent Activity</h3>\n      <form className=\"text-left\" onChange={togglePause}>\n        <label>\n          <input type=\"checkbox\" /> Paused\n        </label>\n      </form>\n      <ul className=\"list-group\">\n        {recentChanges.items.map((item, index) => (\n          <li className=\"list-group-item text-left\" key={index}>\n            <div\n              className={\n                item.scores?.damaging?.score?.prediction ? 'text-red' : ''\n              }\n            >\n              {`User ${item.user} action ${item.type} on ${\n                item.title\n              } ${getTimeDifference(item.timestamp)} seconds ago`}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nconst getTimeDifference = toCompare =>\n  Math.round(\n    Math.abs(new Date().getTime() - new Date(toCompare).getTime()) / 1000\n  )\n\nexport default Feed\n","import Card from 'react-bootstrap/Card'\nimport React, { Component } from 'react'\n\nclass GraphCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      history: this.props.history,\n      title: this.props.title,\n      pageLink: this.props.pageLink,\n      graph: this.props.graph,\n    }\n  }\n\n  render() {\n    return (\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\n        <Card.Body>\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\n          {this.state.graph}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  onClick = () => {\n    this.state.history.push(this.state.pageLink)\n  }\n}\n\nexport default GraphCard\n","import React, { Component } from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\nclass SimpleBarGraph extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n    }\n\n    this.loadData()\n  }\n\n  tooltip = function(click, url) {\n    return (\n      <div className=\"iframe-container\">\n        <iframe\n          src={url + click.indexValue}\n          className=\"iframe\"\n          title=\"tooltip-option-2\"\n        />\n      </div>\n    )\n  }\n\n  loadData = async () => {\n    let getData = this.props.settings.getData.bind(this)\n    let data = await getData()\n    let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\n    this.setState({\n      loaded: true,\n      data: smlData,\n    })\n  }\n\n  refresh = async () => {\n    if (!this.props.paused) {\n      let method = this.props.settings.refreshMethod.bind(this)\n      await method()\n    }\n  }\n\n  componentDidMount() {\n    this.refreshInterval = setInterval(async () => {\n      await this.refresh()\n    }, this.props.settings.refreshTime)\n  }\n\n  render() {\n    let margin = {}\n    let label = null\n    let classname = ''\n    let onClick = null\n    let clickable = false\n    let tooltip = null\n    let legend = []\n    let colorBy = this.props.settings.colorBy\n      ? this.props.settings.colorBy\n      : 'index'\n    if (this.state.fullGraph) {\n      if (this.props.settings.margin) {\n        margin = this.props.settings.margin\n      } else {\n        margin = { top: 5, right: 30, bottom: 80, left: 80 }\n      }\n      if (this.props.settings.legend) {\n        legend = [this.props.settings.legend]\n      }\n      label = true\n      classname = 'full-graph-container'\n      if (this.props.settings.onClick) {\n        onClick = this.props.settings.onClick\n        clickable = true\n      }\n      if (this.props.settings.tooltip) {\n        tooltip = this.props.settings.tooltip.bind(this)\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 }\n      label = false\n      classname = 'Graph-Container-Card'\n    }\n    return (\n      <div>\n        {!this.state.loaded ? (\n          'Loading...'\n        ) : (\n          <div className={classname}>\n            <ResponsiveBar\n              data={this.state.data}\n              keys={this.props.settings.keys}\n              indexBy={this.props.settings.index}\n              margin={margin}\n              padding={0.3}\n              colors={{ scheme: this.props.settings.colors }}\n              colorBy={colorBy}\n              borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n              axisTop={null}\n              axisRight={null}\n              axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 30,\n                legend: this.props.settings.xAxis,\n                legendPosition: 'start',\n                legendOffset: 40,\n              }}\n              axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: this.props.settings.yAxis,\n                legendPosition: 'middle',\n                legendOffset: -60,\n              }}\n              enableLabel={label}\n              onClick={clickable ? onClick : function() {}}\n              animate={label}\n              isInteractive={label}\n              motionStiffness={90}\n              motionDamping={15}\n              tooltip={tooltip}\n              legends={legend}\n            />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default SimpleBarGraph\n","import React, { Component } from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nclass PieChart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n    }\n\n    this.loadData()\n  }\n\n  tooltip = function(click, url) {\n    return (\n      <div className=\"iframe-container\">\n        <iframe\n          src={url + click.label}\n          className=\"iframe\"\n          title=\"tooltip-option-2\"\n        />\n      </div>\n    )\n  }\n\n  loadData = async () => {\n    let getData = this.props.settings.getData.bind(this)\n    let data = await getData()\n    let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\n    this.setState({\n      loaded: true,\n      data: smlData,\n    })\n  }\n\n  refresh = async () => {\n    if (!this.props.paused) {\n      this.loadData()\n    }\n  }\n\n  componentDidMount() {\n    this.refreshInterval = setInterval(async () => {\n      await this.refresh()\n    }, this.props.settings.refreshTime)\n  }\n\n  render() {\n    let margin = {}\n    let label = null\n    let classname = ''\n    let onClick = () => {}\n    let tooltip = null\n    let colors = { scheme: this.props.settings.colors }\n    if (this.props.settings.colorFunction) {\n      colors = this.props.settings.colorFunction\n    }\n    if (this.state.fullGraph) {\n      margin = { top: 30, right: 30, bottom: 30, left: 30 }\n      label = true\n      classname = 'full-graph-container'\n\n      if (this.props.settings.onClick) {\n        onClick = this.props.settings.onClick\n      }\n      if (this.props.settings.tooltip) {\n        tooltip = this.props.settings.tooltip.bind(this)\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 }\n      label = false\n      classname = 'Graph-Container-Card'\n    }\n    return (\n      <div>\n        {!this.state.loaded ? (\n          'Loading...'\n        ) : (\n          <div className={classname}>\n            <ResponsivePie\n              data={this.state.data}\n              margin={margin}\n              innerRadius={0.4}\n              padAngle={0}\n              cornerRadius={0}\n              colors={colors}\n              enableRadialLabels={label}\n              radialLabel=\"label\"\n              radialLabelsSkipAngle={10}\n              radialLabelsTextXOffset={6}\n              radialLabelsTextColor=\"#333333\"\n              radialLabelsLinkOffset={0}\n              radialLabelsLinkDiagonalLength={16}\n              radialLabelsLinkHorizontalLength={24}\n              radialLabelsLinkStrokeWidth={1}\n              radialLabelsLinkColor={{ from: 'color' }}\n              enableSlicesLabels={label}\n              slicesLabelsSkipAngle={10}\n              slicesLabelsTextColor=\"#333333\"\n              animate={true}\n              motionStiffness={90}\n              motionDamping={15}\n              defs={[\n                {\n                  id: 'dots',\n                  type: 'patternDots',\n                  background: 'inherit',\n                  color: 'rgba(255, 255, 255, 0.3)',\n                  size: 4,\n                  padding: 1,\n                  stagger: true,\n                },\n                {\n                  id: 'lines',\n                  type: 'patternLines',\n                  background: 'inherit',\n                  color: 'rgba(255, 255, 255, 0.3)',\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              isInteractive={this.state.fullGraph}\n              onClick={onClick}\n              tooltip={tooltip}\n              defs={[\n                {\n                  id: 'lines',\n                  type: 'patternLines',\n                  background: 'inherit',\n                  color: 'rgba(255, 255, 255, 0.4)',\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              fill={[\n                {\n                  match: {\n                    type: 'edit',\n                  },\n                  id: 'lines',\n                },\n              ]}\n            />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default PieChart\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\n\nclass GraphPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: this.props.history,\n      title: this.props.name,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n        <div className=\"row\">\n          <div className=\"infobox\">\n            <h2>{this.state.title}</h2>\n            <p />\n            <p>{this.props.explanation}</p>\n            <p>\n              <form onChange={this.props.handlePause}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"paused\"\n                    name=\"paused\"\n                    value={this.props.paused}\n                  />{' '}\n                  {'Paused'}\n                </label>\n              </form>\n            </p>\n          </div>\n          {this.props.graph}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GraphPage;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\n\nexport const MostActiveUsersGraphSettings = {\n  getData: async function() {\n    let [data, newTimestamp] = await getRecentActiveUsers(\n      new Date().toISOString()\n    );\n    data = data.slice(0, 50);\n    this.setState({\n      fullData: data,\n      prevTimestamp: newTimestamp,\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function() {\n    let [data, newTimestamp] = await getRecentActiveUsers(\n      this.state.prevTimestamp\n    );\n    this.setState({ prevTimestamp: newTimestamp });\n    data = data.slice(0, 50);\n    if (this.state.fullData) {\n      const fullData = this.state.fullData;\n      data.forEach(userAdditions => {\n        let index = -1;\n        for (let i = 0; i < fullData.length; i += 1) {\n          if (fullData[i].username === userAdditions.username) {\n            index = i;\n          }\n        }\n        if (index !== -1) {\n          fullData[index].actions += userAdditions.actions;\n        } else {\n          fullData.push(userAdditions);\n        }\n      });\n      fullData.sort((a, b) => b.actions - a.actions);\n      fullData.slice(0, 50);\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\n      smlData.forEach(user => {\n        if (user.groups !== undefined && user.groups.includes('bot')) {\n          user.bot = user.actions;\n          user.human = 0;\n        } else {\n          user.bot = 0;\n          user.human = user.actions;\n        }\n      });\n\n      this.setState({ fullData: fullData, data: smlData });\n    } else {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ data: smlData });\n    }\n  },\n  keys: ['bot', 'human'],\n  index: 'username',\n  xAxis: 'username',\n  yAxis: 'actions',\n  colors: 'set2',\n  colorBy: 'id',\n  legend: {\n    dataFrom: 'keys',\n    anchor: 'bottom-right',\n    direction: 'column',\n    justify: false,\n    translateX: 120,\n    translateY: 0,\n    itemsSpacing: 2,\n    itemWidth: 100,\n    itemHeight: 20,\n    itemDirection: 'left-to-right',\n    itemOpacity: 0.85,\n    symbolSize: 20,\n    effects: [\n      {\n        on: 'hover',\n        style: {\n          itemOpacity: 1,\n        },\n      },\n    ],\n  },\n  margin: { top: 5, right: 130, bottom: 50, left: 80 },\n  onClick: function(click) {\n    window.open(\n      'https://www.wikidata.org/wiki/User:' + click.indexValue,\n      '_blank'\n    );\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\n  },\n};\n\nclass MostActiveUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          'A live view of the users active right now. The graph shows users active since this page was loaded.' +\n          \" Hover over a bar to get a preview of the user's page, or click to open the user's page in a new tab.\"\n        }\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={MostActiveUsersGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Most Active Users\"\n      />\n    );\n  }\n}\nexport default MostActiveUsers;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getMostActivePages } from '../Backend/APIWrapper';\n\nexport const MostActivePagesGraphSettings = {\n  getData: async function() {\n    let [data, newTimestamp] = await getMostActivePages(\n      new Date().toISOString()\n    );\n    data = data.slice(0, 50);\n    this.setState({\n      fullData: data,\n      prevTimestamp: newTimestamp,\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function() {\n    let [data, newTimestamp] = await getMostActivePages(\n      this.state.prevTimestamp\n    );\n    this.setState({ prevTimestamp: newTimestamp });\n    data = data.slice(0, 50);\n    if (this.state.fullData) {\n      const fullData = this.state.fullData;\n      data.forEach(pageAdditions => {\n        let index = -1;\n        for (let i = 0; i < fullData.length; i += 1) {\n          if (fullData[i].id === pageAdditions.id) {\n            index = i;\n          }\n        }\n        if (index !== -1) {\n          fullData[index].actions += pageAdditions.actions;\n        } else {\n          fullData.push(pageAdditions);\n        }\n      });\n      fullData.sort((a, b) => b.actions - a.actions);\n      fullData.slice(0, 50);\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ fullData: fullData, data: smlData });\n    } else {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ data: smlData });\n    }\n  },\n  keys: ['actions'],\n  index: 'id',\n  xAxis: 'pages',\n  yAxis: 'actions',\n  colors: 'pastel1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.indexValue, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass MostActivePages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          'A live view of the pages being edited right now. The graph shows pages edited since this page was loaded.' +\n          ' Hover over a bar to get a preview of the page, or click to open the page in a new tab.'\n        }\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={MostActivePagesGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Most Active Pages\"\n      />\n    );\n  }\n}\nexport default MostActivePages;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentLargestEdits } from '../Backend/APIWrapper';\n\nexport const LargestRecentEditsSettings = {\n  getData: getRecentLargestEdits,\n  refreshTime: 2000,\n  refreshMethod: getRecentLargestEdits,\n  colorBy: 'type',\n  colors: 'set2',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass LargestRecentEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          <div>\n            {'The largest of the last 500 edits. The number in each of the sections represents the size of the edit in bytes.' +\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n            <p>\n              <img\n                className=\"legend\"\n                src={require('../legend.svg')}\n                alt=\"Legend\"\n              />\n            </p>\n          </div>\n        }\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={LargestRecentEditsSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Largest Recent Edits\"\n      />\n    );\n  }\n}\nexport default LargestRecentEdits;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentEditsWithSize } from '../Backend/APIWrapper';\n\nexport const RecentEditSizeSettings = {\n  getData: async () => {\n    const data = await getRecentEditsWithSize();\n    data.forEach(item => {\n      item.id = item.revid.toString();\n      item.value = Math.abs(item.newlen - item.oldlen);\n      item.label = item.title;\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async () => {\n    const data = await getRecentEditsWithSize();\n    data.forEach(item => {\n      item.value = Math.abs(item.newlen - item.oldlen);\n      item.id = item.revid.toString();\n      item.label = item.title;\n    });\n    return data;\n  },\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass RecentEditSize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          <div>\n            {'The size of the last 30 edits. The number in each of the sections represents the size of the edit in bytes.' +\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n            <p>\n              <img\n                className=\"legend\"\n                src={require('../legend.svg')}\n                alt=\"Legend\"\n              />\n            </p>\n          </div>\n        }\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={RecentEditSizeSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Recent Edit Size\"\n      />\n    );\n  }\n}\nexport default RecentEditSize;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentEditsWithFlags } from '../Backend/APIWrapper';\n\nexport const ProportionFlaggedSettings = {\n  getData: getRecentEditsWithFlags,\n  refreshTime: 2000,\n  refreshMethod: getRecentEditsWithFlags,\n  colorFunction: d => d.color,\n  name: 'Proportion Of Edits Flagged',\n};\n\nclass ProportionFlagged extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation=\"The proportion of the last 50 edits that was flagged as potentially damaging.\"\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={ProportionFlaggedSettings}\n            paused={this.state.paused}\n          />\n        }\n        name={ProportionFlaggedSettings.name}\n      />\n    );\n  }\n}\nexport default ProportionFlagged;\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\nimport GraphCard from '../Components/GraphCard';\nimport FeedData from '../Components/Feed';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport PieChart from '../Components/PieChart';\nimport { MostActiveUsersGraphSettings } from './MostActiveUsers';\nimport { MostActivePagesGraphSettings } from './MostActivePages';\nimport { LargestRecentEditsSettings } from './LargestRecentEdits';\nimport { RecentEditSizeSettings } from './RecentEditSize';\nimport { ProportionFlaggedSettings } from './ProportionFlagged';\n\n//This is the dashboard page, it shows the feed and all of our graphs\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: this.props.history,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar />\n        <div className=\"row justify-content-left text-dark\">\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\n            <div className=\"feedContainer\">\n              <FeedData />\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\n            <div className=\"deck-container\">\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Recent Edit Size\"\n                  pageLink=\"recent-edit-size\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={true}\n                      fullGraph={false}\n                      settings={RecentEditSizeSettings}\n                    />\n                  }\n                />\n                <GraphCard\n                  title=\"Most Active Users\"\n                  pageLink=\"most-active-users\"\n                  history={this.state.history}\n                  graph={\n                    <SimpleBarGraph\n                      paused={false}\n                      fullGraph={false}\n                      settings={MostActiveUsersGraphSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Most Active Pages\"\n                  pageLink=\"most-active-pages\"\n                  history={this.state.history}\n                  graph={\n                    <SimpleBarGraph\n                      paused={false}\n                      fullGraph={false}\n                      settings={MostActivePagesGraphSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Largest Recent Edits\"\n                  pageLink=\"largest-recent-edits\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={true}\n                      fullGraph={false}\n                      settings={LargestRecentEditsSettings}\n                    />\n                  }\n                />\n                <GraphCard\n                  title={ProportionFlaggedSettings.name}\n                  pageLink=\"proportion-flagged\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={false}\n                      fullGraph={false}\n                      settings={ProportionFlaggedSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getMostEditsUsers } from '../Backend/APIWrapper';\n\nexport const UsersByMostEditsGraphSettings = {\n  getData: async function() {\n    return await getMostEditsUsers();\n  },\n  refreshTime: 2000,\n  refreshMethod: function() {\n    this.loadData();\n  },\n  keys: ['editcount'],\n  index: 'name',\n  xAxis: 'users',\n  yAxis: 'edit count',\n  colors: 'paired',\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\n  },\n};\n\nclass UsersByMostEditsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    this.setState({ paused: event.target.value });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={UsersByMostEditsGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Users By Most Edits\"\n      />\n    );\n  }\n}\nexport default UsersByMostEditsPage;\n","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\n// import HomeNavContainer from '../Components/HomeNavContainer'\n// import HomeStatsContainer from '../Components/HomeStats'\n// import TitleContainer from '../Components/TitleContainer'\n/*This is the home page and makes use of the Navbar, \nhomeNavContainer, homeStatsContainer and TitleContainer components */\n\nclass AboutPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { history: this.props.history };\n  }\n\n  render() {\n    return (\n      <div className=\"aboutPageContainer\">\n        <Navbar history={this.state.history} />\n        <div className=\" text-left\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-sm-12  aboutPageContent\">\n              <div className=\"explainContainer text-left\">\n                <h3 className=\"text-blue\">Why we made our project</h3>\n                <p>\n                  We are a group of Computer Science students studying in\n                  Trinity College Dublin. We undertake a module in which we are\n                  given real world projects from a variety of individuals,\n                  researchers and businesses.\n                </p>\n                <p>\n                  Our clients were Fabrizio and Damien who work in the Trinity\n                  ADAPT research center and they tasked us to create a website\n                  that will visualise various changes to Wikidata in\n                  quasi-real-time. Its targeted users are researchers and should\n                  make it easier to identify spam and incorrect or malicious\n                  edits to Wikidata.\n                </p>\n              </div>\n              <br />\n              <div className=\" licenseContainer text-left\">\n                <h3 className=\"text-blue\">Licensing</h3>\n                <p>\n                  We have insured all libraries and all project dependencies\n                  licenses cover our web apps intended use.\n                </p>\n                <p>\n                  We have decided to use an{' '}\n                  <a href=\"https://opensource.org/licenses/MIT\">MIT license</a>\n                  for this project.\n                </p>\n                <p>\n                  More in depth information along with the projects source code\n                  can be found on the projects{' '}\n                  <a href=\"https://github.com/isobelm/Software-Engineering\">\n                    Github.\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6 col-sm-12 profiles\">\n            <div className=\"client\">\n              <h3 className=\"text-red\">Clients</h3>\n              <div className=\"card-deck\">\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center \">Damien Graux</h5>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://dgraux.github.io/\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card card-profile\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">Fabrizio Orlandi</h5>\n                    <div className=\"text-center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"GH aBlack\"\n                        href=\"https://www.scss.tcd.ie/personnel/orlandif\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <br />\n            <h3 className=\"text-red\">Students</h3>\n            <div className=\"card-deck  text-center\">\n              <div className=\"card card-profile\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    Brian\n                    <br /> Lynch\n                  </h5>\n                  <p className=\"card-text\">\n                    <b>3rd Year CS</b>\n                    <br />\n                    Frontend Team\n                  </p>\n                  <div className=\"text-center\">\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"GH aBlack\"\n                      href=\"https://github.com/brianlunch\"\n                    >\n                      <FontAwesomeIcon icon={faGithub} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card card-profile\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    Isobel\n                    <br /> Mahon\n                  </h5>\n                  <p className=\"card-text\">\n                    <b>3rd Year CS</b>\n                    <br />\n                    Frontend Team\n                  </p>\n                  <div className=\"text-center\">\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"GH aBlack\"\n                      href=\"https://github.com/isobelm\"\n                    >\n                      <FontAwesomeIcon icon={faGithub} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card card-profile\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    Odhran\n                    <br /> Mullen\n                  </h5>\n                  <p className=\"card-text\">\n                    <b>3rd Year CSB</b>\n                    <br />\n                    Backend Team\n                  </p>\n                  <div className=\"text-center\">\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"GH aBlack\"\n                      href=\"https://github.com/omullan\"\n                    >\n                      <FontAwesomeIcon icon={faGithub} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-deck text-center\">\n              <div className=\"card card-profile\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    Alex\n                    <br /> Mahon\n                  </h5>\n                  <p className=\"card-text\">\n                    <b>2nd Year CS</b>\n                    <br />\n                    Frontend Team\n                  </p>\n                  <div className=\"text-center\">\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"GH aBlack\"\n                      href=\"https://github.com/Juuiko\"\n                    >\n                      <FontAwesomeIcon icon={faGithub} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card card-profile\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    Flora\n                    <br /> Molnar\n                  </h5>\n                  <p className=\"card-text\">\n                    <b>2nd Year CSB</b>\n                    <br />\n                    Frontend Team\n                  </p>\n                  <div className=\"text-center\">\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"GH aBlack\"\n                      href=\"https://github.com/flora-m\"\n                    >\n                      <FontAwesomeIcon icon={faGithub} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card card-profile\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    Lexes\n                    <br /> Mantiquilla\n                  </h5>\n                  <p className=\"card-text\">\n                    <b>2nd Year CS</b>\n                    <br />\n                    Backend Team\n                  </p>\n                  <div className=\"text-center\">\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"GH aBlack\"\n                      href=\"https://github.com/lexesjan\"\n                    >\n                      <FontAwesomeIcon icon={faGithub} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport HomePage from './Pages/HomePage';\nimport history from './Utils/History';\nimport FeedData from './Components/Feed';\nimport TestPage from './Pages/TestPage';\nimport UsersByMostEditsPage from './Pages/UsersByMostEditsPage';\nimport MostActiveUsers from './Pages/MostActiveUsers';\nimport MostActivePages from './Pages/MostActivePages';\nimport RecentEditSize from './Pages/RecentEditSize';\nimport LargestRecentEdits from './Pages/LargestRecentEdits';\nimport ProportionFlagged from './Pages/ProportionFlagged';\nimport AboutPage from './Pages/AboutPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nfunction App() {\n  const baseName = 'Software-Engineering';\n  console.log(process.env.PUBLIC_URL);\n  console.log(baseName);\n  return (\n    <div className=\"App\">\n      <Router basename={baseName} history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/page\" component={TestPage} />\n          <Route\n            exact\n            path=\"/users-by-most-edits\"\n            component={UsersByMostEditsPage}\n          />\n          <Route exact path=\"/most-active-users\" component={MostActiveUsers} />\n          <Route exact path=\"/recent-edit-size\" component={RecentEditSize} />\n          <Route\n            exact\n            path=\"/largest-recent-edits\"\n            component={LargestRecentEdits}\n          />\n          <Route exact path=\"/most-active-pages\" component={MostActivePages} />\n          <Route\n            exact\n            path=\"/proportion-flagged\"\n            component={ProportionFlagged}\n          />\n          <Route exact path=\"/about-page\" component={AboutPage} />\n          <Route exact path=\"/feed\" component={FeedData} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}